{"mappings":"AAAO,MAAMA,EAETC,YAAYC,EAAMC,EAAKC,EAAOC,EAAOC,GAEjCC,KAAKL,KAAOA,EACZK,KAAKJ,IAAMA,EACXI,KAAKH,MAAQA,EACbG,KAAKF,MAAQA,EAEbE,KAAKD,UAAW,EAEhBC,KAAKC,QAAUD,MAAKE,GACxB,CACAA,KACI,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAAmBF,SAASG,cAAc,OAChDD,EAAiBE,UAAUC,IAAI,QAC/BH,EAAiBI,QAAQC,QAAUX,KAAKD,SACxC,MAAMa,EAAY,uBACRZ,KAAKF,0DAEbE,KAAKL,yBACNK,KAAKJ,iCACLI,KAAKH,mDAESG,KAAKH,4EAIpBS,EAAiBO,mBAAmB,aAAcD,GAClDT,EAAKW,YAAYR,GACjBS,QAAQC,IAAIV,EAChB,CACAW,UACI,MAAMC,EAAOd,SAASC,cAAc,SACpCa,EAAKC,iBAAiB,SAAUC,KACP,IAAlBpB,KAAKD,UACJmB,EAAKG,MAAMC,gBAAkB,QAC7BtB,KAAKD,UAAW,EAChBgB,QAAQC,IAAIhB,KAAKD,YAEjBmB,EAAKG,MAAMC,gBAAiB,QAC5BtB,KAAKD,UAAW,EAChBgB,QAAQC,IAAIhB,KAAKD,UACrB,GAER,EC7CmBK,SAASC,cAAc,QAC7BkB,OAAOH,IAChB,MAAMI,QAAgBC,MAAM,0CACtBC,QAACA,SAAiBF,EAAQG,OAChCZ,QAAQC,IAAIU,EAAQ,IACP,IAAIjC,EAAK,GAAGiC,EAAQ,GAAG/B,KAAKiC,QAAS,GAAGF,EAAQ,GAAGG,IAAIjC,MAAQ,GAAG8B,EAAQ,GAAG7B,SACrFoB,SAAO,EAEpBa,GACAf,QAAQC,IAAIE","sources":["src/modules/User.js","src/app.js"],"sourcesContent":["export class User {\r\n\r\n    constructor(name, age, email, photo, etatUser){\r\n        // Créer une ou plusieurs propriétés contenant les informations d’un utilisateur\r\n        this.name = name;\r\n        this.age = age;\r\n        this.email = email;\r\n        this.photo = photo;\r\n        // Une propriété indiquant si l’utilisateur est présent ou non. Celle-ci devrait être false par défaut.\r\n        this.etatUser = false;\r\n        // Une propriété se référant à l’élément utilisateur qui sera généré par la méthode décrite directement ci-dessous. \r\n        this.element = this.#render();\r\n    }\r\n    #render(){\r\n        const main = document.querySelector(\"main\");\r\n        const containerElement = document.createElement(\"div\");\r\n        containerElement.classList.add(\"user\");\r\n        containerElement.dataset.present = this.etatUser;\r\n        const childHTML = `\r\n\t\t    <img src=\"${this.photo}\">\r\n\t\t    <div class=\"user--info\">\r\n\t\t\t\t<h1>${this.name}</h1>\r\n\t\t\t\t<p>${this.age} years old</p>\r\n\t\t\t\t<p>${this.email}</p>\r\n\t\t    </div>\r\n            <a href=\"${this.email}\">\r\n\t\t\t\t<span class=\"mail\">✉️</span>\r\n\t\t    </a>\r\n            `;\r\n        containerElement.insertAdjacentHTML(\"afterbegin\", childHTML);\r\n        main.appendChild(containerElement);\r\n        console.log(containerElement);\r\n    }\r\n    display() {\r\n        const user = document.querySelector(\".user\");\r\n        user.addEventListener(\"click\", (e) => {\r\n            if(this.etatUser === true){\r\n                user.style.backgroundColor = \"white\";\r\n                this.etatUser = false;\r\n                console.log(this.etatUser);\r\n            }else{\r\n                user.style.backgroundColor =\"green\";\r\n                this.etatUser = true;\r\n                console.log(this.etatUser);\r\n            }\r\n        });\r\n    }\r\n}","import {User} from \"./modules/User.js\";\r\nconst colorContainer = document.querySelector(\"main\");\r\nconst generate = async (e) => {\r\n        const reponse = await fetch(\"https://randomuser.me/api/?results=20\");\r\n        const {results} = await reponse.json();\r\n        console.log(results[0]);\r\n        const user = new User(`${results[0].name.first}`, `${results[0].dob.age}`,  `${results[0].email}`);\r\n        user.display();\r\n}\r\ngenerate();\r\nconsole.log(user);"],"names":["$a7bf526aaa60872a$export$1f44aaf2ec115b54","constructor","name","age","email","photo","etatUser","this","element","render","main","document","querySelector","containerElement","createElement","classList","add","dataset","present","childHTML","insertAdjacentHTML","appendChild","console","log","display","user","addEventListener","e","style","backgroundColor","async","reponse","fetch","results","json","first","dob","$e73bf42412feb220$var$generate"],"version":3,"file":"index.626706ba.js.map"}